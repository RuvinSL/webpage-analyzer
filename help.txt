help commands




go test ./...



web/templates/index.html




docker-compose down
docker-compose build --no-cache
docker-compose up



go build ./services/gateway
go build ./services/analyzer
go build ./services/link-checker


go run ./services/gateway
go run ./services/analyzer
go run ./services/link-checker



$body = @{url = "https://www.google.com"} | ConvertTo-Json
Invoke-RestMethod -Uri "http://localhost:8080/api/v1/analyze" -Method POST -Body $body -ContentType "application/json"






go install github.com/air-verse/air@latest



netstat -ano | findstr :8081




air -c .air.toml


tree /F


netstat -ano | findstr "8080 8081 8082"



fmt.Println("LOG: htmlStrxxx =", preview)


go test ./...    

cd services/analyzer/core
go test -v -run TestHTMLParserDetectHTMLVersion



go test -v -run TestHTMLParserDetectHTMLVersion
go test -v -run TestHTMLParserExtractTitle
go test -v -run TestHTMLParserParseHTML
go test -v -run TestHTMLParserisLoginForm



###### Testing

Run Unit Tests Only
go test -short ./...


Run Integration Tests Only
go test -run Integration ./...


Run Tests for Specific Package
# Test analyzer service
go test ./services/analyzer/...

# Test specific package with verbose output
go test -v ./services/analyzer/core

# Test with race detection
go test -race ./...


$env:CGO_ENABLED="1"
go test -race 



Run Tests with Coverage
go test -coverprofile=coverage.out ./...
go tool cover -html=coverage.out -o coverage.html

Run Specific Test
# Run a specific test function
go test -run TestAnalyzer_AnalyzeURL ./services/analyzer/core

# Run tests matching a pattern
go test -run "TestHTMLParser.*" ./services/analyzer/core


####


web/templates/index.html




docker-compose down
docker-compose build --no-cache
docker-compose up



go build ./services/gateway
go build ./services/analyzer
go build ./services/link-checker


go run ./services/gateway
go run ./services/analyzer
go run ./services/link-checker



$body = @{url = "https://www.google.com"} | ConvertTo-Json
Invoke-RestMethod -Uri "http://localhost:8080/api/v1/analyze" -Method POST -Body $body -ContentType "application/json"






go install github.com/air-verse/air@latest



netstat -ano | findstr :8081




air -c .air.toml


tree /F


netstat -ano | findstr "8080 8081 8082"



fmt.Println("LOG: htmlStrxxx =", preview)


go test ./...    

cd services/analyzer/core
go test -v -run TestHTMLParserDetectHTMLVersion
go test -v -run TestHTMLParserParseHTML





go test -v -run TestHTMLParserDetectHTMLVersion
go test -v -run TestHTMLParserExtractTitle
go test -v -run TestHTMLParserParseHTML
go test -v -run TestHTMLParserisLoginForm



###### Testing

Run Unit Tests Only
go test -short ./...


Run Integration Tests Only
go test -run Integration ./...


Run Tests for Specific Package
# Test analyzer service
go test ./services/analyzer/...

# Test specific package with verbose output
go test -v ./services/analyzer/core

# Test with race detection
go test -race ./...


Run Tests with Coverage
//go test -coverprofile=coverage.out ./...
//go tool cover -html=coverage.out -o coverage.html
go test -coverprofile coverage.out ./...
go tool cover "-html=coverage.out" > coverage.html



Run Specific Test
# Run a specific test function
go test -run TestAnalyzer_AnalyzeURL ./services/analyzer/core

# Run tests matching a pattern
go test -run "TestHTMLParser.*" ./services/analyzer/core


####

